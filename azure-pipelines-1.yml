trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: BuildTerraformArtifact
  displayName: 'Build Terraform Artifact'
  
  steps:
  - checkout: self

  - script: |
      # Define the folder containing your Terraform configurations
      terraform_folder="smalldeploy"

      # Create a timestamp for the artifact directory
      timestamp=$(date +'%Y%m%d%H%M%S')

      # Define a tag for the artifact (e.g., "dev" or "prod")
      artifact_tag="dev"  # Modify this tag as needed

      # Create the artifact directory
      artifact_dir="$(Build.ArtifactStagingDirectory)/terraform-artifact-$timestamp-$artifact_tag"
      mkdir -p $artifact_dir
      
      # Copy the Terraform configurations to the artifact directory
      cp -r $terraform_folder/* $artifact_dir

      # Archive the artifact directory
      tar -czf $(Build.ArtifactStagingDirectory)/terraform-artifact-$timestamp-$artifact_tag.tar.gz -C $artifact_dir .

      # Publish the artifact
      echo "##vso[artifact.upload containerfolder=terraform-artifacts;artifactname=terraform-artifact-$artifact_tag]$(Build.ArtifactStagingDirectory)/terraform-artifact-$timestamp-$artifact_tag.tar.gz"
    displayName: 'Create Terraform Artifact'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/terraform-artifact'
      artifact: 'terraform-artifact-$artifact_tag'  # Add the tag to the artifact name
