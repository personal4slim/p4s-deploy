# azure-pipelines.yml

trigger:
- main  # Adjust the branch name as needed

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: BuildAndPushDockerImage
  displayName: 'Build and Push Docker Image'
  steps:
  - checkout: self

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      installationPath: $(Agent.ToolsDirectory)/dotnet
      installationScript: 'install'

  - script: |
      # Load environment variables from the variables.yml file
      source $(System.DefaultWorkingDirectory)/variables.yml

      # Build .NET application in the 01-Dockerfile directory
      cd 01-Dockerfile
      dotnet build
    displayName: 'Build .NET Application'

  - script: |
      # Load environment variables from the variables.yml file
      source $(System.DefaultWorkingDirectory)/variables.yml

      # Authenticate with Azure Container Registry (ACR) using the service connection
      az acr login --name $ACRName --username $ServicePrincipalID --password $ServicePrincipalKey

      # Build and push Docker image to ACR
      docker build -t $ACRName.azurecr.io/p4s-k8s-image:$(Build.BuildId) -f Dockerfile .
      docker push $ACRName.azurecr.io/p4s-k8s-image:$(Build.BuildId)

      # Set Azure AD application details as environment variables
      echo "AZURE_CLIENT_ID=$AzureClientID" >> $(HOME)/.bashrc
      echo "AZURE_TENANT_ID=$AzureTenantID" >> $(HOME)/.bashrc
      echo "AZURE_CLIENT_SECRET=$AzureClientSecret" >> $(HOME)/.bashrc
    displayName: 'Build and Push Docker Image'
