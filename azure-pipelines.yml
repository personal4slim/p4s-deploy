# azure-pipelines.yml

trigger:
- main  # Adjust the branch name as needed

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define your variables directly here
  ServicePrincipalID: '62ba6d2f-4192-4cf5-a00d-42328f7d7dfd'
  ServicePrincipalKey: 'nJP8Q~_EqLNHRP2WxOe.b1HjVrKytOXVprvW1ca9'
  TenantID: '104e77d4-81e7-4c16-ab44-935220bed6dd'
  ACRName: 'p4s101231'
  ACRResourceGroup: 'p4s-ACR-rg'
  AzureClientID: '62ba6d2f-4192-4cf5-a00d-42328f7d7dfd'
  AzureTenantID: '104e77d4-81e7-4c16-ab44-935220bed6dd'
  AzureClientSecret: 'nJP8Q~_EqLNHRP2WxOe.b1HjVrKytOXVprvW1ca9'

jobs:
- job: BuildAndPushDockerImage
  displayName: 'Build and Push Docker Image'
  steps:
  - checkout: self

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      installationPath: $(Agent.ToolsDirectory)/dotnet
      installationScript: 'install'

  - script: |
      # Change working directory to 01-Dockerfile
      cd 01-Dockerfile

      # Build .NET application in the 01-Dockerfile directory
      dotnet build
    displayName: 'Build .NET Application'

  - script: |
      # Change working directory to 01-Dockerfile
      cd 01-Dockerfile

      # Authenticate with Azure Container Registry (ACR) using the service connection
      az acr login --name $(ACRName) --username $(ServicePrincipalID) --password $(ServicePrincipalKey)

      # Build and push Docker image to ACR
      docker build -t $(ACRName).azurecr.io/p4s-k8s-image:$(Build.BuildId) -f Dockerfile .
      docker push $(ACRName).azurecr.io/p4s-k8s-image:$(Build.BuildId)

      # Set Azure AD application details as environment variables
      echo "AZURE_CLIENT_ID=$(AzureClientID)" >> $(HOME)/.bashrc
      echo "AZURE_TENANT_ID=$(AzureTenantID)" >> $(HOME)/.bashrc
      echo "AZURE_CLIENT_SECRET=$(AzureClientSecret)" >> $(HOME)/.bashrc
    displayName: 'Build and Push Docker Image'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/01-Dockerfile' # You can change this path as needed
      ArtifactName: 'docker-artifact' # Customize the artifact name
