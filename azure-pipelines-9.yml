trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: deploy
  timeoutInMinutes: 20 # Increased timeout to 20 minutes

  steps:
  - checkout: self

  - script: |
      # Create the Kubernetes manifest directory if it doesn't exist
      mkdir -p $(Build.ArtifactStagingDirectory)/kubernetes-manifest

      # Remove old Kubernetes manifest files (keep the latest 5)
      Get-ChildItem -Path $(Build.ArtifactStagingDirectory)/kubernetes-manifest -File | Sort-Object LastWriteTime -Descending | Select-Object -Skip 5 | Remove-Item -Force

      # Generate the Kubernetes manifest files with a unique identifier based on the build number
      cat <<EOF > $(Build.ArtifactStagingDirectory)/kubernetes-manifest/dev-manifest-$(Build.BuildNumber).yaml
      # ... (Your dev manifest content)
      EOF

      cat <<EOF > $(Build.ArtifactStagingDirectory)/kubernetes-manifest/test-manifest-$(Build.BuildNumber).yaml
      # ... (Your test manifest content)
      EOF

      cat <<EOF > $(Build.ArtifactStagingDirectory)/kubernetes-manifest/prod-manifest-$(Build.BuildNumber).yaml
      # ... (Your prod manifest content)
      EOF
    displayName: 'Create Kubernetes Manifest'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/kubernetes-manifest'
      artifact: 'kubernetes-manifest'

# Deployment stages for dev, test, and prod
- stage: DeployToDev
  jobs:
  - job: Deploy
    steps:
    - task: UseKubectl@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Dev-Kube-Connection'  # Use the correct service connection name for dev
        namespace: 'dev'
    - script: kubectl apply -f $(Build.ArtifactStagingDirectory)/kubernetes-manifest/dev-manifest-$(Build.BuildNumber).yaml
    displayName: 'Deploy to Dev'

- stage: DeployToTest
  jobs:
  - job: Deploy
    steps:
    - task: UseKubectl@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Test-Kube-Connection'  # Use the correct service connection name for test
        namespace: 'test'
    - script: kubectl apply -f $(Build.ArtifactStagingDirectory)/kubernetes-manifest/test-manifest-$(Build.BuildNumber).yaml
    displayName: 'Deploy to Test'

- stage: DeployToProd
  jobs:
  - job: Deploy
    steps:
    - task: UseKubectl@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Prod-Kube-Connection'  # Use the correct service connection name for prod
        namespace: 'prod'
    - script: kubectl apply -f $(Build.ArtifactStagingDirectory)/kubernetes-manifest/prod-manifest-$(Build.BuildNumber).yaml
    displayName: 'Deploy to Prod'
