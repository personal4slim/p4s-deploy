trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: deploy
  timeoutInMinutes: 20 # Increased timeout to 20 minutes

  steps:
  - checkout: self

  - script: |
      # Create the Kubernetes manifest directory if it doesn't exist
      mkdir -p $(Build.ArtifactStagingDirectory)/kubernetes-manifest

      # Generate the Kubernetes manifest file
      cat <<EOF > $(Build.ArtifactStagingDirectory)/kubernetes-manifest/kubernetes-manifest.yaml
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: my-app
      spec:
        replicas: 1  # Reduced replicas to 1
        selector:
          matchLabels:
            app: my-app
        template:
          metadata:
            labels:
              app: my-app
          spec:
            containers:
              - name: my-app
                image: p4s101231.azurecr.io/p4s-k8s-image:latest  # Updated image reference
                ports:
                  - containerPort: 8080
                env:
                  - name: ASPNETCORE_ENVIRONMENT
                    value: Production
                  - name: CONNECTION_STRING
                    value: "your_database_connection_string"
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: my-app-service
      spec:
        selector:
          app: my-app
        ports:
          - protocol: TCP
            port: 80
            targetPort: 8080
        type: LoadBalancer
      EOF
    displayName: 'Create Kubernetes Manifest'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)/kubernetes-manifest'
      artifact: 'kubernetes-manifest'

  # Add your deployment steps here if needed
