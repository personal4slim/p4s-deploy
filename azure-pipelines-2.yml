name: Deploy Kubernetes Cluster

trigger:
  branches:
    exclude:
      - '*'  # Replace with your branch exclusion pattern

pr:
  - '*'

jobs:
  - job: deploy
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
        sudo apt-get update && sudo apt-get install terraform
      displayName: 'Install Terraform'

    - script: terraform --version
      displayName: 'Terraform Version'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'cluster1'  # Use your service connection name ('cluster1')
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az login --service-principal -u 62ba6d2f-4192-4cf5-a00d-42328f7d7dfd -p nJP8Q~_EqLNHRP2WxOe.b1HjVrKytOXVprvW1ca9 --tenant 104e77d4-81e7-4c16-ab44-935220bed6dd

    - script: |
        # Create the Terraform directory path
        mkdir -p .terraform
        
        # Initialize Terraform
        terraform init
      displayName: 'Initialize Terraform'

    - script: terraform plan -out=tfplan -destroy
      displayName: 'Plan Terraform (Destroy)'

    - script: terraform apply -auto-approve tfplan
      displayName: 'Apply Terraform'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/.terraform'
        artifact: 'terraform-output'
